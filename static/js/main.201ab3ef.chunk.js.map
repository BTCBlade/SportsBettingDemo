{"version":3,"sources":["logo.svg","HomePage/data.js","HomePage/styles.js","HomePage/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FootballData","title","teamOne","teamTwo","teamOneOdds","teamTwoOdds","teamOneOver","teamTwoOver","liquidity","MMAData","Container","styled","div","BetContainer","BetButton","HeaderContainer","props","top","StakingContainer","StakingBox","bottom","StakingButton","Homepage","useState","BettingData","setBettingData","walletAmount","setWalletAmount","pageState","setPageState","amountStaked","setAmountStaked","setCurrentBets","loadWeb3","a","window","ethereum","web3","Web3","enable","currentProvider","eth","getAccounts","accounts","address","getBalance","error","wei","balance","utils","fromWei","substring","Ethaccounts","Staking","Contract","staking","abi","methods","pay_out","send","from","once","receipt","console","log","deposit","value","transactionHash","donate","get_bets","Betting","betting","getAmountOfBetOne","call","result","current_bet","amount","bet","distributePrizes","useEffect","getWalletAmount","get_amount_staked","Style","onClick","map","data","submit_bet","payout_bets","pay_out_staked","submit_donation","submit_stake","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.201ab3ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\n\nexport const FootballData = [\n    {\n        title: \"Browns vs Stealers\",\n        teamOne: \"Browns\",\n        teamTwo: \"Stealers\",\n        teamOneOdds: \"+130\",\n        teamTwoOdds: \"-140\",\n        teamOneOver: \"+7 +140\",\n        teamTwoOver: \"-7 -120\",\n        liquidity: \"7.14\"\n    },\n    {\n        title: \"Cavs vs Golden State\",\n        teamOne: \"Cavs\",\n        teamTwo: \"Golden State\",\n        teamOneOdds: \"+110\",\n        teamTwoOdds: \"-170\",\n        teamOneOver: \"+3 +120\",\n        teamTwoOver: \"-2 -150\",\n        liquidity: \"4.22\"\n    },\n    {\n        title: \"Jets vs Patroits\",\n        teamOne: \"Jets\",\n        teamTwo: \"Patroits\",\n        teamOneOdds: \"+180\",\n        teamTwoOdds: \"-140\",\n        teamOneOver: \"+10 +120\",\n        teamTwoOver: \"-5 -160\",\n        liquidity: \"6.74\"\n    },\n    {\n        title: \"Browns vs Stealer\",\n        teamOne: \"Browns\",\n        teamTwo: \"Patroits\",\n        teamOneOdds: \"+130\",\n        teamTwoOdds: \"-140\",\n        teamOneOver: \"+7 +140\",\n        teamTwoOver: \"-7 -120\",\n        liquidity: \"7.82\"\n    }\n]\n\nexport const MMAData = [\n    {\n        title: \"Rua vs. Henderson\",\n        teamOne: \"Rua\",\n        teamTwo: \"Henderson\",\n        teamOneOdds: \"+110\",\n        teamTwoOdds: \"-170\",\n        teamOneOver: \"+1 +160\",\n        teamTwoOver: \"-2 -170\",\n        liquidity: \"8.92\"\n    },\n    {\n        title: \"Jones vs. Gustafsson\",\n        teamOne: \"Jones\",\n        teamTwo: \"Gustafsson\",\n        teamOneOdds: \"+150\",\n        teamTwoOdds: \"-130\",\n        teamOneOver: \"+4 +180\",\n        teamTwoOver: \"-1 -120\",\n        liquidity: \"7.14\"\n    },\n    {\n        title: \"Diaz vs. McGregor\",\n        teamOne: \"Diaz\",\n        teamTwo: \"McGregor\",\n        teamOneOdds: \"+105\",\n        teamTwoOdds: \"-110\",\n        teamOneOver: \"+3 +140\",\n        teamTwoOver: \"-1 -130\",\n        liquidity: \"9.23\"\n    },\n    {\n        title: \"Hunt vs. Silva\",\n        teamOne: \"Hunt\",\n        teamTwo: \"Silva\",\n        teamOneOdds: \"+180\",\n        teamTwoOdds: \"-120\",\n        teamOneOver: \"+5 +110\",\n        teamTwoOver: \"-5 -140\",\n        liquidity: \"4.52\"\n    }\n]\n\nexport const EsportsData = [\n    {\n        title: \"Browns vs Stealer\",\n        teamOne: \"+130\",\n        teamTwo: \"-140\",\n        teamOneOver: \"+7 +140\",\n        teamTwoOver: \"-7 -120\"\n    },\n    {\n        title: \"Cavs vs Golden State\",\n        teamOne: \"+110\",\n        teamTwo: \"-170\",\n        teamOneOver: \"+3 +120\",\n        teamTwoOver: \"-2 -150\"\n    },\n    {\n        title: \"Jets vs Patroits\",\n        teamOne: \"+180\",\n        teamTwo: \"-140\",\n        teamOneOver: \"+10 +120\",\n        teamTwoOver: \"-5 -160\"\n    },\n    {\n        title: \"Browns vs Stealer\",\n        teamOne: \"+130\",\n        teamTwo: \"-140\",\n        teamOneOver: \"+7 +140\",\n        teamTwoOver: \"-7 -120\"\n    }\n]","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\n    margin-top: 100px;\n\n    border: 2px solid white;\n    border-radius: 10px;\n\n    width: 950px;\n\n    ul{\n        list-style-type: none;\n        float: left;\n\n        margin-right: 40px;\n        margin-top: 8px;\n    }\n\n    li {\n        padding-top: 20px;\n    }\n`\n\nexport const BetContainer = styled.div`\n\n    border: 2px solid white;\n    border-radius: 5px;\n\n    opacity: 0.5;\n\n    background-color: grey;\n\n    text-align: center;\n\n    margin-top: 10px;\n\n    li {\n        margin-top: -10px;\n        padding-bottom: 10px;\n    }\n\n    &:hover {\n        color: white;\n        opacity: 1;\n        cursor: pointer;\n    }\n\n    :focus & {\n        color: white;\n        opacity: 1;\n        cursor: pointer;\n    }\n\n`\n\nexport const BetButton = styled.div`\n\n    border: 2px solid white;\n    border-radius: 5px;\n\n    opacity: 0.5;\n\n    height: 20px;\n    width: 180px;\n\n   display: inline-block;\n    background-color: green;\n\n    text-align: center;\n\n    margin-right: 20px;\n    margin-bottom: 30px;\n\n    padding-top: 10px;\n    padding-bottom: 14px;\n\n    &:hover {\n        color: white;\n        opacity: 1;\n        cursor: pointer;\n    }\n\n`\nexport const HeaderContainer = styled.div`\n\n    background-color: black;\n    color: white;\n\n    height: 55px;\n    width: 100%;\n\n    border-bottom: 1px solid white;\n    border-top: 1px solid black;\n\n    margin-top: ${props => props.top};\n\n    h2 {\n        text-align:left;\n        font-size: 24px;\n    }\n\n    ul{\n        list-style-type: none;\n        margin-left: 710px;\n        margin-top: -40px;\n    }\n\n    li {\n        float: left;\n        padding-left: 42px;\n        font-size: 16px;\n    }\n\n    li:hover{\n        color: red;\n        cursor: pointer;\n    }\n\n`","import React, {useState, useEffect} from 'react'\nimport Web3 from 'web3'\nimport styled from \"styled-components\";\n\n\nimport {FootballData, MMAData, EsportsData} from './data'\nimport {Container, BetButton, BetContainer, HeaderContainer} from './styles'\n\nimport betting from './ABI/Betting.json'\nimport staking from './ABI/Staking.json'\n\nconst StakingContainer = styled.div`\n\n    border: 3px solid black;\n    border-radius: 15px;\n    padding-top: 50px;\n    padding-right: 30px;\n    padding-bottom: 50px;\n    float: left;\n\n`\n\nconst StakingBox = styled.div`\n\n    border: 3px solid black;\n    border-radius: 15px;\n    padding-top: 20px;\n    padding-bottom: ${props => props.bottom};\n\n    width: 350px;\n\n    display: inline-block;\n\n    margin-left: 30px;\n\n`\n\nexport const StakingButton = styled.div`\n\n    border: 2px solid white;\n    border-radius: 5px;\n\n    opacity: 0.5;\n\n    height: 20px;\n    width: 180px;\n\n    display: inline-block;\n\n    background-color: green;\n\n    text-align: center;\n\n    margin-top: 30px;\n\n    margin-right: 20px;\n    margin-bottom: 30px;\n\n    padding-top: 10px;\n    padding-bottom: 14px;\n\n    &:hover {\n        color: white;\n        opacity: 1;\n        cursor: pointer;\n    }\n\n`\n\nexport default function Homepage() {\n\n    const [BettingData, setBettingData] = useState(FootballData);\n    const [walletAmount, setWalletAmount] = useState(0);\n    const [pageState, setPageState] = useState(\"Home\");\n\n    const [amountStaked, setAmountStaked] = useState(0);\n\n    const [currentBets, setCurrentBets] = useState(\"No Current Bets\");\n\n\n    async function getWalletAmount(){\n\n        async function loadWeb3() {\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum)\n                await window.ethereum.enable()\n                return(true);\n            }\n            else if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider)\n                return(true);\n            }\n            else {\n                return(false);\n            }\n        }\n    \n        var wallet = await loadWeb3();\n          \n        if (wallet) {\n    \n            const web3 = window.web3\n    \n            const accounts = await web3.eth.getAccounts()\n            const address = {account: accounts[0]}.account;\n    \n            if (address) {\n                \n                    web3.eth.getBalance(address, function (error, wei) {\n                        if (!error) {\n                            var balance = web3.utils.fromWei(wei, 'ether');\n                            setWalletAmount(balance.substring(0,4));\n                        }  \n                    });\n\n                    \n                }\n        }\n    }\n\n    async function pay_out_staked() {\n\n        const web3 = window.web3\n        const Ethaccounts = await web3.eth.getAccounts();\n        const Staking = new web3.eth.Contract(staking.abi, \"0x882b67Dd7247849a94e7F3Ed8Dac44Dd3e6Ce1Dc\");\n\n        await Staking.methods.pay_out().send({from: Ethaccounts[0]})\n        .once('receipt', (receipt) => {\n            console.log(receipt);\n        })\n\n    }\n\n    async function submit_stake(){\n\n        const web3 = window.web3\n        const Ethaccounts = await web3.eth.getAccounts();\n        const Staking = new web3.eth.Contract(staking.abi, \"0x882b67Dd7247849a94e7F3Ed8Dac44Dd3e6Ce1Dc\");\n\n        await Staking.methods.deposit().send({from: Ethaccounts[0], value:100000000000000000})\n        .once('receipt', (receipt) => {\n            console.log(receipt);\n            console.log(\"transaction hash\" + receipt.transactionHash);\n        })\n    }\n\n    async function submit_donation(){\n\n        const web3 = window.web3\n        const Ethaccounts = await web3.eth.getAccounts();\n        const Staking = new web3.eth.Contract(staking.abi, \"0x882b67Dd7247849a94e7F3Ed8Dac44Dd3e6Ce1Dc\");\n\n        await Staking.methods.donate().send({from: Ethaccounts[0], value:100000000000000000})\n        .once('receipt', (receipt) => {\n            console.log(receipt);\n            console.log(\"transaction hash\" + receipt.transactionHash);\n        })\n    }\n\n    async function get_amount_staked() {\n\n        const web3 = window.web3;\n        var balance = await web3.eth.getBalance(\"0x882b67Dd7247849a94e7F3Ed8Dac44Dd3e6Ce1Dc\");\n        \n        console.log(balance / 1000000000000000000);\n        setAmountStaked(balance / 1000000000000000000)\n    }\n\n    async function get_bets(){\n\n        const web3 = window.web3;\n        const Ethaccounts = await web3.eth.getAccounts();\n        const Betting = new web3.eth.Contract(betting.abi, \"0x7c13890f3D6c625A878118B72f1396eCf72c1e7c\");\n\n        var current_bet;\n\n        await Betting.methods.getAmountOfBetOne().call(function (error, result){\n            current_bet = web3.utils.fromWei(result, 'ether')\n            console.log(result);\n            setCurrentBets(current_bet);\n        });\n\n        setPageState(\"Bets\");\n\n    }\n\n    async function submit_bet(amount) {\n\n        const web3 = window.web3;\n        const Ethaccounts = await web3.eth.getAccounts();\n        const Betting = new web3.eth.Contract(betting.abi, \"0x7c13890f3D6c625A878118B72f1396eCf72c1e7c\");\n\n        //Betting on '1' uses team one that the player is betting on\n        await Betting.methods.bet(2).send({from: Ethaccounts[0], value: amount})\n        .once('receipt', (receipt) => {\n            console.log(receipt);\n            console.log(\"transaction hash\" + receipt.transactionHash);\n        })\n\n        await Betting.methods.getAmountOfBetOne().call(function (error, result){\n            console.log(result);\n        });\n    }\n\n\n    useEffect(() => {\n        getWalletAmount();\n        get_amount_staked();\n    }, []);\n\n    async function payout_bets(){\n\n        const web3 = window.web3;\n        const Ethaccounts = await web3.eth.getAccounts();\n        const Betting = new web3.eth.Contract(betting.abi, \"0x7c13890f3D6c625A878118B72f1396eCf72c1e7c\");\n\n        //Betting on '1' uses team one that the player is betting on\n        await Betting.methods.distributePrizes(2).send({from: Ethaccounts[0]})\n        .once('receipt', (receipt) => {\n            console.log(receipt);\n        })\n    }\n\n    if (pageState == \"Home\") {\n    return (\n        <>\n\n        <HeaderContainer> \n\n            <h2 Style=\"margin-left: 30px;\"> Sports Betting </h2>\n\n            <ul>\n                <li onClick={() => setBettingData(FootballData)}>Football</li>\n                <li onClick={() => setBettingData(MMAData)}> MMA </li>\n                <li onClick={() => get_bets()}> Staking</li>\n                <li onClick={() => get_bets()}> Wallet Balance: {walletAmount} ETH </li>\n            </ul>\n\n        </HeaderContainer> \n\n        {BettingData.map (data =>\n\n        <Container> \n                <>    \n                <ul Style=\"width: 240px;\">\n                    <li Style=\"Color: #b0b0b0; \n                               font-weight: bold;\n                               text-decoration: underline\">{data.title} </li>\n                    <li> {data.teamOne} </li>\n                    <li Style=\"margin-top: 10px;\"> {data.teamTwo} </li>\n                </ul>\n           \n\n                <ul>\n                    <li>Money Line </li>\n\n                    <BetContainer>\n                        <li> {data.teamOneOdds} </li>\n                    </BetContainer>\n\n                    <BetContainer>\n                        <li> {data.teamTwoOdds} </li>\n                    </BetContainer>\n                </ul>\n\n                <ul>\n                    <li>Over / Under </li>\n\n                    <BetContainer>\n                        <li> {data.teamOneOver} </li>\n                    </BetContainer>\n\n                    <BetContainer>\n                        <li> {data.teamTwoOver} </li>\n                    </BetContainer>\n                </ul>\n\n                <ul>\n                    <li Style=\"color:#808080;\n                               font-weight:bold;\n                               margin-left: 10px;\"> Liqudity </li>\n                    \n                    <li Style=\"margin-left: 9px;\"> ETH: {data.liquidity}</li>\n                \n                </ul>\n\n                <BetButton onClick={() => submit_bet(100000000000000000)}>\n                    Place Bet\n                </BetButton>\n                </>  \n        </Container>\n\n        )}  \n\n            <h2 onClick={() => payout_bets()}> Payout One Test </h2>\n            <h2> Payout Two Test </h2>\n\n\n        <div Style=\"padding-top: 150px;\">\n            <p> Footer Here </p>\n        </div>\n        </>\n    )\n    } else {\n\n        return (\n            <>\n                <HeaderContainer top=\"0px;\"> \n\n                <h2 Style=\"margin-left: 30px;\"> Sports Betting </h2>\n\n                <ul>\n                    <li onClick={() => setPageState(\"Home\")}>Football</li>\n                    <li onClick={() => setPageState(\"Home\")}> MMA </li>\n                    <li onClick={() => setPageState(\"Home\")}> Staking </li>\n                    <li onClick={() => setPageState(\"Home\")}> Wallet Balance: {walletAmount} ETH </li>\n                </ul>\n\n                </HeaderContainer> \n\n            <div>\n                 <p Style=\"padding-top: 15px\">Current Amount Staked: </p>\n                 <p Style=\"margin-top: -10px\"> Staked: 100.32 ETH </p>\n            </div>\n\n            <StakingContainer>\n                 <StakingBox bottom=\"80px;\">\n                     <h2> Your Payout: </h2>\n\n                     <h2>714.00 ETH</h2>\n                </StakingBox>\n\n                <StakingBox bottom=\"80px;\">\n                     <h2>Amount Staked: </h2>\n\n                     <h2>{amountStaked} ETH </h2>\n                </StakingBox>\n\n\n                <StakingBox bottom=\"80px;\">\n                     <h2> Your Stake: </h2>\n\n                     <h2>0.0714 ETH</h2>\n                </StakingBox>\n            </StakingContainer>\n    \n            <div Style=\"float: left\">\n                <StakingButton onClick={() => pay_out_staked()}>\n                    Payout Test\n                </StakingButton>\n\n                <StakingButton onClick={() => submit_donation()}>\n                    Dontae To Fund\n                </StakingButton>\n\n\n                <StakingButton onClick={() => submit_stake()}>\n                    Stake\n                </StakingButton>\n            </div>\n\n            </>\n        )\n    }\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport HomePage from './HomePage/index'\n\nfunction App() {\n  return (\n    <>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <HomePage />\n      </header>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}