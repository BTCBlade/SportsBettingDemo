{"version":3,"sources":["logo.svg","HomePage/data.js","HomePage/styles.js","HomePage/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FootballData","title","teamOne","teamTwo","teamOneOdds","teamTwoOdds","teamOneOver","teamTwoOver","liquidity","MMAData","EsportsData","Container","styled","div","BetContainer","BetButton","HeaderContainer","Homepage","useState","BettingData","setBettingData","walletAmount","setWalletAmount","pageState","setPageState","currentBets","setCurrentBets","loadWeb3","a","window","ethereum","web3","Web3","enable","currentProvider","eth","getAccounts","accounts","address","getBalance","error","wei","balance","utils","fromWei","substring","Betting","Contract","betting","abi","methods","getAmountOfBetOne","call","result","current_bet","console","log","amount","Ethaccounts","bet","send","from","value","once","receipt","transactionHash","useEffect","getWalletAmount","Style","onClick","get_bets","map","data","submit_bet","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b9a09366.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\n\nexport const FootballData = [\n    {\n        title: \"Browns vs Stealers\",\n        teamOne: \"Browns\",\n        teamTwo: \"Stealers\",\n        teamOneOdds: \"+130\",\n        teamTwoOdds: \"-140\",\n        teamOneOver: \"+7 +140\",\n        teamTwoOver: \"-7 -120\",\n        liquidity: \"7.14\"\n    },\n    {\n        title: \"Cavs vs Golden State\",\n        teamOne: \"Cavs\",\n        teamTwo: \"Golden State\",\n        teamOneOdds: \"+110\",\n        teamTwoOdds: \"-170\",\n        teamOneOver: \"+3 +120\",\n        teamTwoOver: \"-2 -150\",\n        liquidity: \"4.22\"\n    },\n    {\n        title: \"Jets vs Patroits\",\n        teamOne: \"Jets\",\n        teamTwo: \"Patroits\",\n        teamOneOdds: \"+180\",\n        teamTwoOdds: \"-140\",\n        teamOneOver: \"+10 +120\",\n        teamTwoOver: \"-5 -160\",\n        liquidity: \"6.74\"\n    },\n    {\n        title: \"Browns vs Stealer\",\n        teamOne: \"Browns\",\n        teamTwo: \"Patroits\",\n        teamOneOdds: \"+130\",\n        teamTwoOdds: \"-140\",\n        teamOneOver: \"+7 +140\",\n        teamTwoOver: \"-7 -120\",\n        liquidity: \"7.82\"\n    }\n]\n\nexport const MMAData = [\n    {\n        title: \"Rua vs. Henderson\",\n        teamOne: \"Rua\",\n        teamTwo: \"Henderson\",\n        teamOneOdds: \"+110\",\n        teamTwoOdds: \"-170\",\n        teamOneOver: \"+1 +160\",\n        teamTwoOver: \"-2 -170\",\n        liquidity: \"8.92\"\n    },\n    {\n        title: \"Jones vs. Gustafsson\",\n        teamOne: \"Jones\",\n        teamTwo: \"Gustafsson\",\n        teamOneOdds: \"+150\",\n        teamTwoOdds: \"-130\",\n        teamOneOver: \"+4 +180\",\n        teamTwoOver: \"-1 -120\",\n        liquidity: \"7.14\"\n    },\n    {\n        title: \"Diaz vs. McGregor\",\n        teamOne: \"Diaz\",\n        teamTwo: \"McGregor\",\n        teamOneOdds: \"+105\",\n        teamTwoOdds: \"-110\",\n        teamOneOver: \"+3 +140\",\n        teamTwoOver: \"-1 -130\",\n        liquidity: \"9.23\"\n    },\n    {\n        title: \"Hunt vs. Silva\",\n        teamOne: \"Hunt\",\n        teamTwo: \"Silva\",\n        teamOneOdds: \"+180\",\n        teamTwoOdds: \"-120\",\n        teamOneOver: \"+5 +110\",\n        teamTwoOver: \"-5 -140\",\n        liquidity: \"4.52\"\n    }\n]\n\nexport const EsportsData = [\n    {\n        title: \"Browns vs Stealer\",\n        teamOne: \"+130\",\n        teamTwo: \"-140\",\n        teamOneOver: \"+7 +140\",\n        teamTwoOver: \"-7 -120\"\n    },\n    {\n        title: \"Cavs vs Golden State\",\n        teamOne: \"+110\",\n        teamTwo: \"-170\",\n        teamOneOver: \"+3 +120\",\n        teamTwoOver: \"-2 -150\"\n    },\n    {\n        title: \"Jets vs Patroits\",\n        teamOne: \"+180\",\n        teamTwo: \"-140\",\n        teamOneOver: \"+10 +120\",\n        teamTwoOver: \"-5 -160\"\n    },\n    {\n        title: \"Browns vs Stealer\",\n        teamOne: \"+130\",\n        teamTwo: \"-140\",\n        teamOneOver: \"+7 +140\",\n        teamTwoOver: \"-7 -120\"\n    }\n]","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\n    margin-top: 100px;\n\n    border: 2px solid white;\n    border-radius: 10px;\n\n    width: 950px;\n\n    ul{\n        list-style-type: none;\n        float: left;\n\n        margin-right: 40px;\n        margin-top: 8px;\n    }\n\n    li {\n        padding-top: 20px;\n    }\n`\n\nexport const BetContainer = styled.div`\n\n    border: 2px solid white;\n    border-radius: 5px;\n\n    opacity: 0.5;\n\n    background-color: grey;\n\n    text-align: center;\n\n    margin-top: 10px;\n\n    li {\n        margin-top: -10px;\n        padding-bottom: 10px;\n    }\n\n    &:hover {\n        color: white;\n        opacity: 1;\n        cursor: pointer;\n    }\n\n    :focus & {\n        color: white;\n        opacity: 1;\n        cursor: pointer;\n    }\n\n`\n\nexport const BetButton = styled.div`\n\n    border: 2px solid white;\n    border-radius: 5px;\n\n    opacity: 0.5;\n\n    height: 20px;\n    width: 180px;\n\n   display: inline-block;\n    background-color: green;\n\n    text-align: center;\n\n    margin-right: 20px;\n    margin-bottom: 30px;\n\n    padding-top: 10px;\n    padding-bottom: 14px;\n\n    &:hover {\n        color: white;\n        opacity: 1;\n        cursor: pointer;\n    }\n\n`\nexport const HeaderContainer = styled.div`\n\n    background-color: black;\n    color: white;\n\n    height: 55px;\n    width: 100%;\n\n    border-bottom: 1px solid white;\n    border-top: 1px solid black;\n\n    h2 {\n        text-align:left;\n        font-size: 24px;\n    }\n\n    ul{\n        list-style-type: none;\n        margin-left: 710px;\n        margin-top: -40px;\n    }\n\n    li {\n        float: left;\n        padding-left: 42px;\n        font-size: 16px;\n    }\n\n    li:hover{\n        color: red;\n        cursor: pointer;\n    }\n\n`","import React, {useState, useEffect} from 'react'\nimport Web3 from 'web3'\n\nimport {FootballData, MMAData, EsportsData} from './data'\nimport {Container, BetButton, BetContainer, HeaderContainer} from './styles'\n\nimport box from './ABI/Box.json'\nimport betting from './ABI/Betting.json'\n\nexport default function Homepage() {\n\n    const [BettingData, setBettingData] = useState(FootballData);\n    const [walletAmount, setWalletAmount] = useState(0);\n    const [pageState, setPageState] = useState(\"Home\");\n\n    const [currentBets, setCurrentBets] = useState(\"No Current Bets\");\n\n    async function getWalletAmount(){\n\n        async function loadWeb3() {\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum)\n                await window.ethereum.enable()\n                return(true);\n            }\n            else if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider)\n                return(true);\n            }\n            else {\n                return(false);\n            }\n        }\n    \n        var wallet = await loadWeb3();\n          \n        if (wallet) {\n    \n            const web3 = window.web3\n    \n            const accounts = await web3.eth.getAccounts()\n            const address = {account: accounts[0]}.account;\n    \n            if (address) {\n                \n                    web3.eth.getBalance(address, function (error, wei) {\n                        if (!error) {\n                            var balance = web3.utils.fromWei(wei, 'ether');\n                            setWalletAmount(balance.substring(0,4));\n                        }  \n                    });\n\n                    \n                }\n        }\n    }\n\n    async function sumbit_number(number){\n\n        const web3 = window.web3\n\n        const Ethaccounts = await web3.eth.getAccounts()\n\n        const boxData = box.networks[3]\n\n        const abi = box.abi;\n        const Contractaddress = box.networks[3].address;\n        const Box = new web3.eth.Contract(abi, Contractaddress);\n\n        await Box.methods.store(number).send({from: Ethaccounts[0]})\n         .once('receipt', (receipt) => {\n           console.log(receipt);\n        })\n\n        console.log(Contractaddress);\n        \n        await Box.methods.retrieve().call(function(error, result){\n            console.log(result);\n        });   \n    }\n\n    async function get_bets(){\n\n        const web3 = window.web3;\n\n        const Ethaccounts = await web3.eth.getAccounts();\n\n        const Betting = new web3.eth.Contract(betting.abi, \"0x7c13890f3D6c625A878118B72f1396eCf72c1e7c\");\n\n        var current_bet;\n\n        await Betting.methods.getAmountOfBetOne().call(function (error, result){\n            current_bet = web3.utils.fromWei(result, 'ether')\n            console.log(result);\n            setCurrentBets(current_bet);\n        });\n\n        setPageState(\"Bets\");\n\n    }\n\n    async function submit_bet(amount) {\n\n        const web3 = window.web3;\n\n        const Ethaccounts = await web3.eth.getAccounts();\n\n        const Betting = new web3.eth.Contract(betting.abi, \"0x7c13890f3D6c625A878118B72f1396eCf72c1e7c\");\n\n        //Betting on '1' uses team one that the player is betting on\n        await Betting.methods.bet(1).send({from: Ethaccounts[0], value: amount})\n        .once('receipt', (receipt) => {\n            console.log(receipt);\n            console.log(\"transaction hash\" + receipt.transactionHash);\n        })\n\n        await Betting.methods.getAmountOfBetOne().call(function (error, result){\n            console.log(result);\n        });\n    }\n\n\n    useEffect(() => {\n        getWalletAmount();\n    });\n\n    if (pageState == \"Home\") {\n    return (\n        <>\n\n        <HeaderContainer> \n\n            <h2 Style=\"margin-left: 30px;\"> Sports Betting </h2>\n\n            <ul>\n                <li onClick={() => setBettingData(FootballData)}>Football</li>\n                <li onClick={() => setBettingData(MMAData)}> MMA </li>\n                <li onClick={() => setBettingData(EsportsData)}> E-Sports</li>\n                <li onClick={() => get_bets()}> Wallet Balance: {walletAmount} ETH </li>\n            </ul>\n\n        </HeaderContainer> \n\n        {BettingData.map (data =>\n\n        <Container> \n                <>    \n                <ul Style=\"width: 240px;\">\n                    <li Style=\"Color: #b0b0b0; \n                               font-weight: bold;\n                               text-decoration: underline\">{data.title} </li>\n                    <li> {data.teamOne} </li>\n                    <li Style=\"margin-top: 10px;\"> {data.teamTwo} </li>\n                </ul>\n           \n\n                <ul>\n                    <li>Money Line </li>\n\n                    <BetContainer>\n                        <li> {data.teamOneOdds} </li>\n                    </BetContainer>\n\n                    <BetContainer>\n                        <li> {data.teamTwoOdds} </li>\n                    </BetContainer>\n                </ul>\n\n                <ul>\n                    <li>Over / Under </li>\n\n                    <BetContainer>\n                        <li> {data.teamOneOver} </li>\n                    </BetContainer>\n\n                    <BetContainer>\n                        <li> {data.teamTwoOver} </li>\n                    </BetContainer>\n                </ul>\n\n                <ul>\n                    <li Style=\"color:#808080;\n                               font-weight:bold;\n                               margin-left: 10px;\"> Liqudity </li>\n                    \n                    <li Style=\"margin-left: 9px;\"> ETH: {data.liquidity}</li>\n                \n                </ul>\n\n                <BetButton onClick={() => submit_bet(100000000000000000)}>\n                    Place Bet\n                </BetButton>\n                </>  \n        </Container>\n        )}  \n\n        <div Style=\"padding-top: 150px;\">\n            <p> Footer Here </p>\n        </div>\n        </>\n    )\n    } else {\n\n        return (\n            <>\n                <HeaderContainer Style=\"margin-top: -100px\"> \n\n                <h2 Style=\"margin-left: 30px;\"> Sports Betting </h2>\n\n                <ul>\n                    <li onClick={() => setBettingData(FootballData)}>Football</li>\n                    <li onClick={() => setBettingData(MMAData)}> MMA </li>\n                    <li onClick={() => setBettingData(EsportsData)}> E-Sports</li>\n                    <li onClick={() => setPageState(\"Home\")}> Wallet Balance: {walletAmount} ETH </li>\n                </ul>\n\n                </HeaderContainer> \n\n                 <p Style=\"padding-top: 200px\">Current Bets: </p>\n                 <p> Amount Bet On Team One: {currentBets} ETH </p>\n            </>\n        )\n    }\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport HomePage from './HomePage/index'\n\nfunction App() {\n  return (\n    <>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <HomePage />\n      </header>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}